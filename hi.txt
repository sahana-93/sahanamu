  sahana  PROGRAM 1----



import java.util.*;

public class ArrayListDemo {
    public static void main(String[] args) {
        // Create ArrayList of fruits
        ArrayList<String> fruits = new ArrayList<>();

        // Add elements
        fruits.add("Apple");
        fruits.add("Mango");
        fruits.add("Banana");
        fruits.add("Grapes");

        System.out.println("Original ArrayList: " + fruits);

        // Remove "Banana"
        fruits.remove("Banana");

        System.out.println("After removing 'Banana': " + fruits);

        // Sort the ArrayList
        Collections.sort(fruits);
        System.out.println("Sorted ArrayList: " + fruits);

        // Convert ArrayList to Array
        String[] fruitArray = fruits.toArray(new String[0]);

        // Print array elements
        System.out.println("Array elements: " + Arrays.toString(fruitArray));
    }
}
------------------------------------------------------------------------------------

PROGRAM 2--

import java.util.*;

class Student {
    private int id;
    private String name;
    private double marks;

    // Constructor
    Student(int id, String name, double marks) {
        this.id = id;
        this.name = name;
        this.marks = marks;
    }

    // Getters
    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public double getMarks() {
        return marks;
    }

    // toString method
    public String toString() {
        return "Student ID: " + id + ", Name: " + name + ", Marks: " + marks;
    }
}

public class Program31 {
    public static void main(String[] args) {
        // Create a list of Student objects
        List<Student> obj = new ArrayList<Student>();

        // Add students
        obj.add(new Student(216, "Sricharan", 98));
        obj.add(new Student(203, "Shreyas", 95));
        obj.add(new Student(208, "Shrinivas", 96));

        System.out.println("Student List:");

        // Using for-each loop
        for (Student s : obj) {
            System.out.println(s);
        }

        System.out.println("\nAccessing using index:");

        // Using index-based loop
        for (int i = 0; i < obj.size(); i++) {
            System.out.println("ID: " + obj.get(i).getId());
            System.out.println("Name: " + obj.get(i).getName());
            System.out.println("Marks: " + obj.get(i).getMarks());
            System.out.println();
        }
    }
}
----------------------------------------------------------------------

PROGRAM 3--

import java.util.*;

public class RandomNumbers {
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);

        System.out.print("Enter lower bound: ");
        int lowerBound = obj.nextInt();

        System.out.print("Enter upper bound: ");
        int upperBound = obj.nextInt();

        System.out.print("Enter count of random numbers to generate: ");
        int count = obj.nextInt();

        Random rand = new Random();
        List<Integer> numbers = new ArrayList<>();

        // Generate random numbers that are multiples of 285
        while (numbers.size() < count) {
            int num = lowerBound + rand.nextInt(upperBound - lowerBound + 1);
            if (num % 285 == 0) {
                numbers.add(num);
            }
        }

        System.out.println("Generated numbers are: " + numbers);

        // Sort using custom comparator based on tens place
        numbers.sort(new TensPlaceComparator());

        System.out.println("Sorted numbers (by tens place): " + numbers);

        obj.close();
    }
}

// Comparator to sort by tens place digit
class TensPlaceComparator implements Comparator<Integer> {
    public int compare(Integer num1, Integer num2) {
        int tensPlace1 = (num1 / 10) % 10;
        int tensPlace2 = (num2 / 10) % 10;

        return Integer.compare(tensPlace1, tensPlace2);
    }
}
---------------------------------------------------------------------------------
PROGRAM 4--

public class StringDemo {
    public static void main(String[] args) {
        String s1 = new String();
        System.out.println("Empty String: \"" + s1 + "\"");

        String s2 = new String("Welcome");
        System.out.println("String as a parameter: " + s2);

        char chars[] = {'a', 'b', 'c', 'd'};
        String s3 = new String(chars);
        System.out.println("String from char array: " + s3);

        char char1[] = {'w', 'i', 'n', 'd', 'o', 'w', 's'};
        String s4 = new String(char1, 0, 4);
        System.out.println("String from part of char array: " + s4);

        byte b[] = {97, 98, 99, 100};
        String s5 = new String(b);
        System.out.println("String from byte array: " + s5);

        byte b1[] = {65, 66, 67, 68, 69, 70};
        String s6 = new String(b1);
        System.out.println("Another string from byte array: " + s6);
    }
}
----------------------------------------------------------------------------------
PROGRAM 5--

import java.util.*;

public class Stringmethod {
    public static void main(String[] args) {
        String str = "JavaGuides";
        char ch = str.charAt(3);
        System.out.println(ch);

        String substr = str.substring(3);
        System.out.println(substr);

        String substr1 = str.substring(4, 10);
        System.out.println(substr1);

        String s1 = "Welcome";
        String s2 = "Welcome";
        String s3 = "WELCOME";

        System.out.println(s1.equals(s2));
        System.out.println(s1.equals(s3));
        System.out.println(s1.equalsIgnoreCase(s3));

        String s4 = "welcome";
        System.out.println(s4);

        String s5 = s4.toUpperCase();
        System.out.println(s5);

        String s6 = s3.toLowerCase();
        System.out.println(s6);
    }
}
---------------------------------------------------------------------------------------
PROGRAM 6--

import java.util.*;

public class StringBufferDemo {
    public StringBufferDemo() {
    }

    public static void main(String[] args) {
        String str = "welcome";
        StringBuffer sb = new StringBuffer(str);

        System.out.println("String buffer class");
        System.out.println("Capacity: " + sb.capacity());
        System.out.println("Length: " + sb.length());
        System.out.println("Appending string: " + sb.append("to BMSIT"));
        System.out.println("Appending integer: " + sb.append(78));
        System.out.println("Inserting string: " + sb.insert(0, "***"));
        System.out.println("Reversed string: " + sb.reverse());
    }
}
--------------------------------------------------------------------------------
PROGRAM 7--

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ButtonExample {
    public static void main(String[] args) {
        JFrame f = new JFrame("Button Click");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setSize(300, 200);

        JPanel panel = new JPanel();

        JButton alphabutton = new JButton("Alpha");
        JButton betabutton = new JButton("Beta");
        JLabel message = new JLabel("");

        alphabutton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                message.setText("Alpha pressed");
            }
        });

        betabutton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                message.setText("Beta pressed");
            }
        });

        panel.setBackground(Color.CYAN);
        panel.add(alphabutton);
        panel.add(betabutton);
        panel.add(message);

        f.add(panel);
        f.setVisible(true);
    }
}

--------------------------------------------------------------------------------
 

---------------------------------------------------------------------------------
PROGRAM 8--

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Program 8</title>
</head>
<body style="background-color: powderblue;">
    <h1>Program 8</h1>
    <form action="GreetServlet" method="get">
        <label for="uname">Enter Name:</label>
        <input type="text" id="uname" name="uname"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

import java.io.*;
import jakarta.servlet.*;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;

@WebServlet("/Program8")
public class Program8 extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
        res.setContentType("text/html");
        PrintWriter pw = res.getWriter();

        String msg = req.getParameter("name");

        pw.println("<html><body style='background-color: lightcyan;'>");
        pw.println("<h2>Hello " + msg + ", How are you</h2>");
        pw.println("</body></html>");
    }

    protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
        doGet(req, res); // Reuse doGet logic
    }
}
---------------------------------------------------------------------------------------------------------------------

PROGRAM 9--

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Student Details</title>
</head>
<body>
    <h2>Enter Student Details</h2>
    <form action="StudentServlet" method="post">
        Name: <input type="text" name="name"><br><br>
        USN: <input type="text" name="usn"><br><br>
        Marks 1: <input type="number" name="marks1"><br><br>
        Marks 2: <input type="number" name="marks2"><br><br>
        Marks 3: <input type="number" name="marks3"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

import java.io.*;
import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.WebServlet;

@WebServlet("/StudentServlet")
public class StudentServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
        res.setContentType("text/html");
        PrintWriter out = res.getWriter();

        // Get parameters from form
        String name = req.getParameter("name");
        String usn = req.getParameter("usn");

        int m1 = Integer.parseInt(req.getParameter("marks1"));
        int m2 = Integer.parseInt(req.getParameter("marks2"));
        int m3 = Integer.parseInt(req.getParameter("marks3"));

        int total = m1 + m2 + m3;
        float percentage = (total / 3.0f);

        // Output HTML
        out.println("<html><body>");
        out.println("<h2>Student Result</h2><br>");
        out.println("<b>Name:</b> " + name + "<br>");
        out.println("<b>USN:</b> " + usn + "<br>");
        out.println("<b>Subject 1:</b> " + m1 + "<br>");
        out.println("<b>Subject 2:</b> " + m2 + "<br>");
        out.println("<b>Subject 3:</b> " + m3 + "<br>");
        out.println("<b>Total Marks:</b> " + total + "<br>");
        out.println("<b>Percentage:</b> " + percentage + "%<br>");
        out.println("</body></html>");
    }
}
--------------------------------------------------------------------------
PROGRAM 10--

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import java.io.*;

public class SetCookieServlet extends HttpServlet {
    protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {

        // Create a cookie
        Cookie empidCookie = new Cookie("EMPID", "AN2356");
        empidCookie.setMaxAge(60 * 60 * 24); // 1 day
        res.addCookie(empidCookie);

        // Set response content type
        res.setContentType("text/html");

        // Prepare response writer
        PrintWriter out = res.getWriter();
        out.println("<!DOCTYPE html>");
        out.println("<html>");
        out.println("<head>");
        out.println("<title>Insert title here</title>");
        out.println("</head>");
        out.println("<body>");
        out.println("<p>Cookie 'EMPID' set with value AN2356</p>");
        out.println("<h1><a href='ReadCookieServlet'>Go to Read</a></h1>");
        out.println("</body>");
        out.println("</html>");
    }
}



import jakarta.servlet.http.*;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.*;
import java.io.*;

@WebServlet("/ReadCookieServlet")
public class ReadCookieServlet extends HttpServlet {

    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {

        Cookie[] cookies = req.getCookies();
        String empidVal = null;

        if (cookies != null) {
            for (Cookie cookie : cookies) {
                if (cookie.getName().equals("EMPID")) {
                    empidVal = cookie.getValue();
                    break;
                }
            }
        }

        res.setContentType("text/html");
        PrintWriter out = res.getWriter();

        if (empidVal != null) {
            out.println("EMPID Cookie value: " + empidVal);
        } else {
            out.println("EMPID Cookie not found.");
        }
    }
}

                                                     OR



